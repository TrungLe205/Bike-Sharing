setwd("~/Documents/DATA SCIENTIST/Car Cancellation")
car <- read.csv("Cars.csv")
str(car)
summary(car)
setwd("~/Documents/DATA SCIENTIST/Bike Sharing/Data")
library(caret)
library(rpart)
library(randomForest)
library(dplyr)
library(caTools)
library(gbm)
library(plyr)
set.seed(1)
split = sample.split(train_dat$count, SplitRatio = 0.7)
subTrain = subset(train_dat, split == TRUE)
subTest = subset(train_dat, split == FALSE)
train <- bike[1:10886,]
test <- bike[10887:17379,]
train_dat <- cbind(train, casual)
train_dat <- cbind(train_dat, registered)
train_dat <- cbind(train_dat, count)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
# combine train and test data
casual <- train$casual
registered <- train$registered
count <- train$count
train <- train[,-c(10:12)]
bike <- rbind(train,test)
# seperate date and time variable
Hours <- format(as.POSIXct(strptime(bike$datetime,"%d/%m/%Y %H:%M:%S",tz="")) ,format = "%H:%M:%S")
date <- as.POSIXct(bike$datetime)
df_date <- data.frame(date = date, Year = as.numeric(format(date, format = "%Y")), Month = as.numeric(format(date, format = "%m")), Day = as.numeric(format(date, format = "%d")), Hour = as.numeric(format(date, format = "%H")))
# create weekday variable
df_date$weekday <- as.factor(weekdays(df_date$date))
df_date <- df_date[,2:6]
bike <- cbind(bike, df_date)
str(bike)
# create weekend variable
bike$weekend <- ifelse(bike$weekday == "Saturday" | bike$weekday == "Sunday", "1", "0")
# distribution of numerical variable
bike$season <- as.numeric(bike$season)
hist(bike$season)
bike$holiday <- as.numeric(bike$holiday)
hist(bike$holiday)
bike$workingday <- as.numeric(bike$workingday)
hist(bike$workingday)
hist(bike$temp)
bike$weather <- as.numeric(bike$weather)
hist(bike$weather)
bike$weekend <- as.numeric(bike$weekend)
hist(bike$weekend)
hist(bike$humidity)
# transform variables
table(bike$season)
bike$season <- as.factor(bike$season)
bike$Hour <- as.factor(bike$Hour)
bike$holiday <- as.factor(bike$holiday)
bike$workingday <- as.factor(bike$workingday)
bike$weather <- as.factor(bike$weather)
bike$Year <- as.factor(bike$Year)
bike$Month <- as.factor(bike$Month)
bike$weekend <- as.factor(bike$weekend)
str(bike)
# group Hour variable into 4 groups: 0-6, 7-15, 16-19, 20-23
bike$Hour <- as.numeric(bike$Hour)
hour <- ifelse(bike$Hour < 7, "0-6", ifelse( bike$Hour >= 7 & bike$Hour < 16, "7-15", ifelse(bike$Hour >= 16 & bike$Hour < 20, "16-19", "20-23")))
bike <- cbind(bike, hour)
table(bike$hour)
bike <- bike[,-13]
bike$hour <- as.factor(bike$hour)
str(bike)
# group Month variable into 3 groups: 1-5, 6-10, 11-12
bike$Month <- as.numeric(bike$Month)
month <- ifelse(bike$Month < 6, "1-5", ifelse(bike$Month >= 6 & bike$Month < 11, "6-10", "11-12"))
bike <- cbind(bike, month)
table(bike$month)
bike <- bike[,-11]
bike$month <- as.factor(bike$month)
# normalize variables: temp, atemp, humidity, windspeed
dat <- bike %>% mutate_each_(funs(scale), vars = c("temp", "atemp", "humidity", "windspeed"))
# data preparation, we split train data into 2 sets to evaluate the model before submit
View(bike)
View(dat)
train <- bike[1:10886,]
test <- bike[10887:17379,]
train_dat <- cbind(train, casual)
train_dat <- cbind(train_dat, registered)
train_dat <- cbind(train_dat, count)
set.seed(1)
split = sample.split(train_dat$count, SplitRatio = 0.7)
subTrain = subset(train_dat, split == TRUE)
subTest = subset(train_dat, split == FALSE)
set.seed(1)
split = sample.split(train_dat$count, SplitRatio = 0.7)
subTrain = subset(train_dat, split == TRUE)
subTest = subset(train_dat, split == FALSE)
train <- bike[1:10886,]
test <- bike[10887:17379,]
train_dat <- cbind(train, casual)
train_dat <- cbind(train_dat, registered)
train_dat <- cbind(train_dat, count)
casual <- casual ~ season + holiday + workingday + weather + temp + atemp + humidity + windspeed + Year + Day + weekday + weekend + hour + month
registered <- registered ~ season + holiday + workingday + weather + temp + atemp + humidity + windspeed + Year + Day + weekday + weekend + hour + month
casual_rpart <- rpart(casual, data = subTrain)
casual_pred <- round(predict(casual_rpart, newdata = subTest))
registered_rpart <- rpart(registered, data = subTrain)
registered_pred <- round(predict(registered_rpart, newdata = subTest))
count_rpart <- casual_pred + registered_pred
rmse_rpart <- sqrt(mean((count_rpart - subTest$count)^2))
rmse_rpart
library(caTools)
setwd("~/Documents/DATA SCIENTIST/Bike Sharing")
set.seed(1)
split <- sample.split(train_dat$count, SplitRatio = 0.7)
subTrain <- subset(train_dat, split == TRUE)
subTest <- subset(train_dat, split == FALSE)
setwd("~/Documents/DATA SCIENTIST/Bike Sharing/Data")
setwd("~/Documents/DATA SCIENTIST/Bike Sharing")
setwd("~/Documents/DATA SCIENTIST/Bike Sharing/Data")
